@model IEnumerable<todoApp.Data.Note>

@{
    Layout = "_Layout"; 
}

<h1>My Notes</h1>

<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); padding-left: 10px; grid-template-rows: auto;">
    
    @foreach (var note in Model)
    {
    <div id="GridItem" style="background-color: @note.Color; border-radius: 8px; height: 400px; width: 300px; display: flex; flex-direction: column; justify-content: space-between; padding: 10px; box-sizing: border-box; position: relative; transition: background-color 0.3s ease;"
        onmouseover="this.style.backgroundColor = 'rgba(0, 0, 0, 0.2)'; this.querySelector('.action-buttons').style.display = 'flex';" 
        onmouseout="this.style.backgroundColor = '@note.Color'; this.querySelector('.action-buttons').style.display = 'none';">
        
        <h2>@note.Title</h2>
        <p style="word-wrap: break-word; overflow-wrap: break-word; word-break: break-word;">@note.Content</p>
        <em style="margin-top: auto;">Created: @note.CreatedAt</em>

        
        <div class="action-buttons" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); display: none; flex-direction: row; gap: 10px;">
            <button onclick="editNote(@note.NoteId)" style="padding: 10px; background-color: #4CAF50; color: white; border: none; border-radius: 5px;">Edit</button>
            <button onclick="deleteNote(@note.NoteId)" style="padding: 10px; background-color: #f44336; color: white; border: none; border-radius: 5px;">Delete</button>
        </div>
    </div>
    }

    <div id="clickableBox" style="background-color: #ccc; width: 295px; height: 400px; display: flex; justify-content: center; align-items: center; border-radius: 8px; cursor: pointer; transition: background-color 0.3s ease;"
     onmouseover="this.style.backgroundColor='#bbb';" 
     onmouseout="this.style.backgroundColor='#ccc';" 
     onclick="this.style.backgroundColor='#888';">

        <span id="clickableText">Create a new note!</span>
        
       
        <div id="formContainer" style="display: none; flex-direction: column; width: 100%; height: 100%; background-color: #ccc; border-radius: 8px; padding: 20px; box-sizing: border-box;">
            <form method="post" asp-action="AddNote" asp-controller="Auth" style="display: grid; gap: 15px; width: 100%; padding: 0;">
                <h2>Yeni Not Ekle</h2>
                <label for="title">Başlık:</label>
                <input type="text" id="title" name="title" required />

                <label for="content">İçerik:</label>
                <textarea id="content" name="content" required></textarea>

                <label for="color">Renk Seçin:</label>
                <input type="color" id="color" name="color" value="#ffffff" />

                <button type="submit">Not Ekle</button>
            </form>
        </div>
    </div>
</div>

<script>
    
    const clickableBox = document.getElementById('clickableBox');
    const formContainer = document.getElementById('formContainer');
    const clickableText = document.getElementById('clickableText');

    clickableBox.addEventListener('click', function() {
        
        formContainer.style.display = 'flex';

        
        clickableText.style.display = 'none';

        
        clickableBox.style.justifyContent = 'flex-start';  
    });

    function deleteNote(noteId) {
    if (confirm('Bu notu silmek istediğinizden emin misiniz?')) {
        
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/Auth/Delete'; 

        
        const input = document.createElement('input');
        input.type = 'hidden';  
        input.name = 'id';      
        input.value = noteId;   
        form.appendChild(input); 

        
        document.body.appendChild(form);
        form.submit(); 
    }
}

</script>
